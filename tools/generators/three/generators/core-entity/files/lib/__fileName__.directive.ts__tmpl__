// GENERATED
<% if (withThreeObject3d) { %>
import { <%= abstract %>, NgtObject3d, <% if (withAudio) { %>NGT_AUDIO_CONTROLLER_PROVIDER<% } else { %>NGT_OBJECT_3D_CONTROLLER_PROVIDER<% } %> } from '@angular-three/core';<% } else { %>import { <%= abstract %> } from '@angular-three/core';<% } %>
import { NgModule, Directive, Input } from '@angular/core';
<% if (isExample) { %>import { <% if (catalogueKey === 'curves') { %><% if (name === 'NURBSCurve') { %><%= name %><% } else { %>Curves<% } %><% } else { %><%= name %><% } %><% if (withParameters) { %>,<% if (name === 'RawShaderMaterial') { %>ShaderMaterial<% } else { %><%= name %><% } %>Parameters<% } %>  } from 'three/examples/jsm/<%= catalogueKey %>/<% if (catalogueKey === 'curves') { %><% if (name === 'NURBSCurve') { %><%= name %><% } else { %>CurveExtras<% } %><% } else { %><%= name %><% } %>';<% } else {%>import * as THREE from 'three';<% } %>

@Directive({
  selector: 'ngt-<%= fileName %>',
  exportAs: 'ngt<%= name %>',
  providers: [
    {
      provide: <%= abstract %>,
      useExisting: Ngt<%= name %>,
    }<% if (withThreeObject3d) { %>,
    {
      provide: NgtObject3d,
      useExisting: Ngt<%= name %>,
    },
    <% if (withAudio) { %>NGT_AUDIO_CONTROLLER_PROVIDER<% } else { %>NGT_OBJECT_3D_CONTROLLER_PROVIDER<% } %>,<% } %>
  ],
})
export class Ngt<%= name %> extends <%= abstract %><<% if (secondaryGeneric) { %><%= secondaryGeneric %>, <% } %><%= mainGeneric %>> {
  <% if (withArgs) { %>
  static ngAcceptInputType_args: ConstructorParameters<typeof <%= argsName %>> | undefined;

  @Input() set args(v: ConstructorParameters<typeof <%= argsName %>>) {
    this.extraArgs = v;
  }<% } %><% if (withParameters) { %>
  static ngAcceptInputType_parameters: <%= paramsName %>Parameters | undefined;<% } %>

  <%= type %> = <%= typeName %>;
}

@NgModule({
  declarations: [Ngt<%= name %>],
  exports: [Ngt<%= name %>],
})
export class Ngt<%= name %>Module {}

